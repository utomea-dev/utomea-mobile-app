/**
 * This code was generated by [React Native CLI](https://www.npmjs.com/package/@react-native-community/cli).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 */

#include "rncli.h"
#include <rnasyncstorage.h>
#include <rncameraroll.h>
#include <RNCGeolocation.h>
#include <rngesturehandler_codegen.h>
#include <react/renderer/components/rngesturehandler_codegen/ComponentDescriptors.h>
#include <rnpermissions.h>
#include <safeareacontext.h>
#include <react/renderer/components/safeareacontext/ComponentDescriptors.h>
#include <RNVectorIconsSpec.h>

namespace facebook {
namespace react {

std::shared_ptr<TurboModule> rncli_ModuleProvider(const std::string moduleName, const JavaTurboModule::InitParams &params) {
  auto module_rnasyncstorage = rnasyncstorage_ModuleProvider(moduleName, params);
  if (module_rnasyncstorage != nullptr) {
    return module_rnasyncstorage;
  }
  auto module_rncameraroll = rncameraroll_ModuleProvider(moduleName, params);
  if (module_rncameraroll != nullptr) {
    return module_rncameraroll;
  }
  auto module_RNCGeolocation = RNCGeolocation_ModuleProvider(moduleName, params);
  if (module_RNCGeolocation != nullptr) {
    return module_RNCGeolocation;
  }
  auto module_rngesturehandler_codegen = rngesturehandler_codegen_ModuleProvider(moduleName, params);
  if (module_rngesturehandler_codegen != nullptr) {
    return module_rngesturehandler_codegen;
  }
  auto module_rnpermissions = rnpermissions_ModuleProvider(moduleName, params);
  if (module_rnpermissions != nullptr) {
    return module_rnpermissions;
  }
  auto module_safeareacontext = safeareacontext_ModuleProvider(moduleName, params);
  if (module_safeareacontext != nullptr) {
    return module_safeareacontext;
  }
  auto module_RNVectorIconsSpec = RNVectorIconsSpec_ModuleProvider(moduleName, params);
  if (module_RNVectorIconsSpec != nullptr) {
    return module_RNVectorIconsSpec;
  }
  return nullptr;
}

void rncli_registerProviders(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {











  providerRegistry->add(concreteComponentDescriptorProvider<RNGestureHandlerButtonComponentDescriptor>());
  providerRegistry->add(concreteComponentDescriptorProvider<RNGestureHandlerRootViewComponentDescriptor>());


  providerRegistry->add(concreteComponentDescriptorProvider<RNCSafeAreaProviderComponentDescriptor>());
  providerRegistry->add(concreteComponentDescriptorProvider<RNCSafeAreaViewComponentDescriptor>());

  return;
}

} // namespace react
} // namespace facebook
